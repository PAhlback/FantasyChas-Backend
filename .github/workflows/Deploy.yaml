name: Deploy

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Docker image name
        uses: actions/download-artifact@v3
        with:
          name: docker-image

      - name: Print Docker image name
        run: cat DOCKER_IMAGE.txt

      - name: Set Docker image name
        run: echo "DOCKER_IMAGE=$(cat DOCKER_IMAGE.txt)" >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.0.0'

      - name: Azure Login
        run: |
          export ARM_CLIENT_ID="${{ secrets.AZURE_CLIENT_ID }}"
          export ARM_CLIENT_SECRET="${{ secrets.AZURE_CLIENT_SECRET }}"
          export ARM_SUBSCRIPTION_ID="${{ secrets.AZURE_SUBSCRIPTION_ID }}"
          export ARM_TENANT_ID="${{ secrets.AZURE_TENANT_ID }}"
          az login --service-principal -u $ARM_CLIENT_ID -p $ARM_CLIENT_SECRET --tenant $ARM_TENANT_ID
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      - name: Create SSH directory if not exists
        run: mkdir -p $HOME/.ssh

      - name: Set up SSH key
        run: |
          echo "${{ secrets.SSH_PUBLIC_KEY }}" > $HOME/.ssh/masterchass.pub
        shell: bash

      - name: Terraform Init
        run: terraform init -backend-config="token=${{ secrets.TF_API_TOKEN }}"
        working-directory: terraform

      - name: Terraform Plan
        run: terraform plan -var="backend_docker_image=$DOCKER_IMAGE"
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          DOCKER_IMAGE: ${{ env.DOCKER_IMAGE }}
        working-directory: terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve -var="backend_docker_image=$DOCKER_IMAGE"
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          DOCKER_IMAGE: ${{ env.DOCKER_IMAGE }}
        working-directory: terraform
